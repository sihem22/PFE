<?php

namespace tuto\BackofficeBundle\Repository;

/**
 * demandeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
//        $query->where("d.user = :user");
//        $query->setParameter('user', $user_id);


class DemandeRepository extends \Doctrine\ORM\EntityRepository {
    public function getDemandeNonLu($user_id) {
        $query = $this->createQueryBuilder("d");
        $query->select('d');
        $query->where('d.etat = 5');
        $query->andWhere($query->expr()->notIn('d.id', "SELECT d2.id FROM tuto\BackofficeBundle\Entity\Demande d2 INNER JOIN d2.propositions p WHERE p.user = :user"));
         $query->andWhere($query->expr()->in('d.service', "SELECT ser.id FROM tuto\BackofficeBundle\Entity\User u2 INNER JOIN u2.services ser WHERE u2.id = :user"));
        $query->setParameter('user', $user_id);
        return $query->getQuery()->getResult();
    }



	public function getNb($categorie_id)
	{
		$query = $this->createQueryBuilder('u');
		$query->SELECT ('COUNT(u)');
		$query->join('u.service','s');
		$query->where('s.Categorie = :id');
		$query->setParameter('id',$categorie_id);

        return $query->getQuery()->getSingleScalarResult();

	}

	

	public function findByetat()
	{
		$query = $this->createQueryBuilder('d');
		$query->SELECT ('d') ;
		$query->where('d.etat = 4');
		
        return $query->getQuery()->getResult();
	}

	public function count()
	{
		$query = $this->createQueryBuilder('n');
		$query->SELECT ('COUNT(n)');
		$query->where('n.etat = 4');
        return $query->getQuery()->getSingleScalarResult();
        
	}

 
 }

    
   
